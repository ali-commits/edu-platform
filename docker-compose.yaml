version: '3.8'

services:
  # ─────────────────────────────────────────────────────────────────
  # Traefik Reverse Proxy
  # ─────────────────────────────────────────────────────────────────
  traefik:
    image: traefik:3.3
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/acme.json:/letsencrypt/acme.json
    networks:
      - web
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping", "--ping.entrypoint=ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    labels:
      - "traefik.enable=true"

      # ─── Traefik Dashboard ─────────────────────────────────────
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$apr1$$9yu5hkml$$5Hl.OJXmF9DTrXIQYgZYl0"

      # ─── Global HTTP→HTTPS redirect ────────────────────────────
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.*}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  # ─────────────────────────────────────────────────────────────────
  # Moodle's Database (PostgreSQL)
  # ─────────────────────────────────────────────────────────────────
  moodle-db:
    image: postgres:${MOODLE_DB_VERSION}
    container_name: moodle-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${MOODLE_DB_NAME}
      POSTGRES_USER: ${MOODLE_DB_USER}
      POSTGRES_PASSWORD: ${MOODLE_DB_PASS}
    volumes:
      - moodle-db-data:/var/lib/postgresql/data
    networks:
      - web
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${MOODLE_DB_USER} -d ${MOODLE_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


  # ─────────────────────────────────────────────────────────────────
  # Moodle LMS
  # ─────────────────────────────────────────────────────────────────
  moodle:
    image: bitnami/moodle:${MOODLE_VERSION} # Specific version instead of latest
    container_name: moodle
    restart: unless-stopped
    depends_on:
      moodle-db:
        condition: service_healthy
    environment:
      MOODLE_DATABASE_TYPE: pgsql
      MOODLE_DATABASE_HOST: moodle-db
      MOODLE_DATABASE_PORT_NUMBER: 5432
      MOODLE_DATABASE_USER: ${MOODLE_DB_USER}
      MOODLE_DATABASE_PASSWORD: ${MOODLE_DB_PASS}
      MOODLE_DATABASE_NAME: ${MOODLE_DB_NAME}

      # Optional initial Moodle setup variables
      MOODLE_SITE_NAME: "${MOODLE_SITE_NAME}"
      MOODLE_USERNAME: "${MOODLE_ADMIN_USER}"
      MOODLE_PASSWORD: "${MOODLE_ADMIN_PASS}"
      MOODLE_EMAIL: "${MOODLE_ADMIN_EMAIL}"

    networks:
      - web
    volumes:
      - moodle-data:/bitnami/moodle

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.moodle.rule=Host(`${MOODLE_DOMAIN}`)"
      - "traefik.http.routers.moodle.entrypoints=websecure"
      - "traefik.http.routers.moodle.tls.certresolver=letsencrypt"

  # ─────────────────────────────────────────────────────────────────
  # openSIS Database (MariaDB)
  # ─────────────────────────────────────────────────────────────────
  opensis-db:
    image: mariadb:${OPENSIS_DB_VERSION}
    container_name: opensis-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${OPENSIS_DB_NAME}
      MYSQL_USER: ${OPENSIS_DB_USER}
      MYSQL_PASSWORD: ${OPENSIS_DB_PASS}
      MYSQL_ROOT_PASSWORD: ${OPENSIS_DB_ROOT_PASS}
    volumes:
      - ./my.cnf:/etc/mysql/conf.d/my.cnf
      - opensis-db-data:/var/lib/mysql
    networks:
      - web
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${OPENSIS_DB_USER}", "-p${OPENSIS_DB_PASS}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


  # ─────────────────────────────────────────────────────────────────
  # openSIS (Custom Build)
  # ─────────────────────────────────────────────────────────────────
  opensis:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: opensis
    restart: unless-stopped
    depends_on:
      opensis-db:
        condition: service_healthy
    environment:
      DB_HOST: opensis-db
      DB_NAME: ${OPENSIS_DB_NAME}
      DB_USER: ${OPENSIS_DB_USER}
      DB_PASS: ${OPENSIS_DB_PASS}
    networks:
      - web
    volumes:
      - opensis-data:/var/www/html
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/index.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.opensis.rule=Host(`${OPENSIS_DOMAIN}`)"
      - "traefik.http.routers.opensis.entrypoints=websecure"
      - "traefik.http.routers.opensis.tls.certresolver=letsencrypt"

# ─────────────────────────────────────────────────────────────────
# Named Volumes
# ─────────────────────────────────────────────────────────────────
volumes:
  moodle-db-data:
  moodle-data:
  opensis-db-data:
  opensis-data:

# ─────────────────────────────────────────────────────────────────
# Docker Network
# ─────────────────────────────────────────────────────────────────
networks:
  web:
    name: web
